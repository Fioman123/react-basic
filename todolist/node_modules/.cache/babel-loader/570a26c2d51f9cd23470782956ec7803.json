{"ast":null,"code":"var _jsxFileName = \"E:\\\\mycode\\\\react-basic\\\\todolist\\\\src\\\\TodoList.js\";\nimport React, { Component, Fragment } from 'react';\n\nclass TodoList extends Component {\n  // 构造函数,由于其他的函数先调用\n  constructor(props) {\n    super(props); // 定义这个组件的状态\n\n    this.state = {\n      inputValue: \"我变了\",\n      list: []\n    };\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: this.state.inputValue,\n      onChange: this.handleInputChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleBtnClick.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"\\u63D0\\u4EA4\")), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, this.state.list.map((item, index) => {\n      return React.createElement(\"li\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, item);\n    })));\n  } // 控制改变input框的状态\n\n\n  handleInputChange(e) {\n    this.setState({\n      inputValue: e.target.value\n    });\n  } // 控制按钮的点击事件\n\n\n  handleBtnClick(e) {\n    this.setState({\n      list: [...this.state.list, this.state.inputValue],\n      inputValue: ''\n    });\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["E:\\mycode\\react-basic\\todolist\\src\\TodoList.js"],"names":["React","Component","Fragment","TodoList","constructor","props","state","inputValue","list","render","handleInputChange","bind","handleBtnClick","map","item","index","e","setState","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC7B;AACAG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAEf;;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,KADH;AAETC,MAAAA,IAAI,EAAE;AAFG,KAAb;AAIH;;AACDC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,UAAzB;AAAqC,MAAA,QAAQ,EAAE,KAAKG,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAQ,MAAA,OAAO,EAAE,KAAKC,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,CADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKL,KAAL,CAAWE,IAAX,CAAgBK,GAAhB,CAAoB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACjC,aAAO;AAAI,QAAA,GAAG,EAAIA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmBD,IAAnB,CAAP;AACH,KAFD,CAFR,CALJ,CADJ;AAeH,GA1B4B,CA2B7B;;;AACAJ,EAAAA,iBAAiB,CAACM,CAAD,EAAI;AACjB,SAAKC,QAAL,CAAc;AACVV,MAAAA,UAAU,EAAES,CAAC,CAACE,MAAF,CAASC;AADX,KAAd;AAGH,GAhC4B,CAkC7B;;;AACAP,EAAAA,cAAc,CAACI,CAAD,EAAI;AACd,SAAKC,QAAL,CAAc;AACVT,MAAAA,IAAI,EAAC,CAAC,GAAG,KAAKF,KAAL,CAAWE,IAAf,EAAoB,KAAKF,KAAL,CAAWC,UAA/B,CADK;AAEVA,MAAAA,UAAU,EAAC;AAFD,KAAd;AAIH;;AAxC4B;;AA2CjC,eAAeJ,QAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\r\n\r\nclass TodoList extends Component {\r\n    // 构造函数,由于其他的函数先调用\r\n    constructor(props) {\r\n        super(props);\r\n        // 定义这个组件的状态\r\n        this.state = {\r\n            inputValue: \"我变了\",\r\n            list: []\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div>\r\n                    <input value={this.state.inputValue} onChange={this.handleInputChange.bind(this)} />\r\n                    <button onClick={this.handleBtnClick.bind(this)}>提交</button>\r\n                </div>\r\n                <ul>\r\n                    {\r\n                        this.state.list.map((item, index) => {\r\n                            return <li key = {index}>{item}</li>\r\n                        })\r\n                    }\r\n                </ul>\r\n            </Fragment>\r\n        )\r\n    }\r\n    // 控制改变input框的状态\r\n    handleInputChange(e) {\r\n        this.setState({\r\n            inputValue: e.target.value,\r\n        });\r\n    }\r\n\r\n    // 控制按钮的点击事件\r\n    handleBtnClick(e) {\r\n        this.setState({\r\n            list:[...this.state.list,this.state.inputValue],\r\n            inputValue:'',\r\n        });\r\n    }\r\n}\r\n\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}